[{"C:\\Users\\rmill\\Documents\\Code\\yearn-returns\\client\\src\\index.js":"1","C:\\Users\\rmill\\Documents\\Code\\yearn-returns\\client\\src\\App.js":"2","C:\\Users\\rmill\\Documents\\Code\\yearn-returns\\client\\src\\reportWebVitals.js":"3","C:\\Users\\rmill\\Documents\\Code\\yearn-returns\\client\\src\\components\\earningChart.js":"4","C:\\Users\\rmill\\Documents\\Code\\yearn-returns\\client\\src\\components\\earningChartList.js":"5"},{"size":500,"mtime":1607613003652,"results":"6","hashOfConfig":"7"},{"size":3082,"mtime":1608039212446,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":1607613003652,"results":"9","hashOfConfig":"7"},{"size":1003,"mtime":1608126045418,"results":"10","hashOfConfig":"7"},{"size":894,"mtime":1608053519305,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1vtz7zx",{"filePath":"15","messages":"16","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"14"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"14"},"C:\\Users\\rmill\\Documents\\Code\\yearn-returns\\client\\src\\index.js",[],["25","26"],"C:\\Users\\rmill\\Documents\\Code\\yearn-returns\\client\\src\\App.js",["27","28"],"import React, { useState, useEffect, useCallback } from 'react';\nimport axios from 'axios';\nimport ChartList from './components/earningChartList';\nimport moment from 'moment';\nimport { Line, Pie } from 'react-chartjs-2';\nimport './App.css';\n\nfunction App() {\n  const [balanceRecords, setBalanceRecords] = useState({});\n  const [gainsData, setGainsData] = useState([]);\n  const [charts, setCharts] = useState([]);\n  const [pieData, setPieData] = useState([]);\n\n  useEffect(() =>{\n    console.log(\"VERSION #\",process.env.REACT_APP_VERSION);\n    let url = process.env.REACT_APP_API_URL;\n    let port = process.env.REACT_APP_API_PORT; \n    console.log(\"URL + PORT:\",url+\":\"+port)\n    axios.get(url+\":\"+port+\"/api/balance/getAll\").then((response, error) => {    \n      if(error) throw error;\n      setBalanceRecords(response.data.data)\n    })\n    .catch(err => console.log(err));\n    \n    axios.get(url+\":\"+port+\"/api/balance/getTotalGains\").then(gainsData => {\n      setGainsData(gainsData.data.data);\n    }).catch(err=>{\n      console.log(err)\n      throw err;\n    });\n    \n  },[])\n\n  useEffect(() =>{\n    let pieLabels = [];\n    let pieDatasets= [];\n    gainsData.forEach(d=>{\n      if(d.priceId && d.usdGain){\n        pieLabels.push(d.priceId);\n        pieDatasets.push(d.usdGain.toFixed(2));\n      }\n    })\n    let tempPieData = {\n      labels: pieLabels,\n      datasets:[{\n        label: \"USD Gains\",\n        data: pieDatasets,\n        backgroundColor: [\"#237529\"],\n        borderWidth:4\n      }]\n    }\n    setPieData(tempPieData);\n  },[gainsData])\n\n  useEffect(() =>{\n    if(balanceRecords && balanceRecords.length>0){\n      formatChartData(balanceRecords);\n    }\n  },[balanceRecords])\n\n  const formatChartData = (data) => {\n    \n    let chartData = {};\n    \n    data.forEach(d=>{\n      if(d.priceId && chartData[d.priceId]){\n        chartData[d.priceId].labels.push(moment(d.createdAt).format('MM/DD hh:mm'));\n        chartData[d.priceId].datasets[0].data.push(d.underlyingBalance.toFixed(6));\n      }\n      else{\n        if(d.priceId){\n          let newObj = {\n              labels:[moment(d.createdAt).format('MM/DD hh:mm')],\n              datasets:[{\n                label: \"Underlying Balance\",\n                data: [d.underlyingBalance],\n                backgroundColor: ['#4b0c78'],\n                borderWidth:2\n              }]\n          }\n          chartData[d.priceId] = newObj;\n        }\n        else{\n          // No match\n        }\n      }\n    })\n    setCharts(chartData);\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <p>\n        \n        </p>\n        <div>\n          <ChartList  charts={charts} gainsData={gainsData} />\n          <Pie \n            data={pieData} \n            options={{\n                responsive: true,\n                maintainAspectRatio: true,\n                title: {\n                    text: \"USD Performance\", \n                    display: true,\n                    fontSize: 30\n                }\n            }}\n            />\n        </div>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\rmill\\Documents\\Code\\yearn-returns\\client\\src\\reportWebVitals.js",[],"C:\\Users\\rmill\\Documents\\Code\\yearn-returns\\client\\src\\components\\earningChart.js",[],"C:\\Users\\rmill\\Documents\\Code\\yearn-returns\\client\\src\\components\\earningChartList.js",["29","30","31"],"import React from 'react';\r\nimport { Line, Pie } from 'react-chartjs-2';\r\nimport Chart from './earningChart'\r\n\r\nconst earningChartList = (props) =>{\r\n    let newCharts = [];\r\n    let rows = <>Nothing to display</>;\r\n    let vaultGain = {};\r\n    if(props.gainsData.length>0){\r\n      Object.keys(props.charts).forEach(k=>{\r\n        newCharts.push(props.charts[k]);\r\n      })\r\n      rows = newCharts.map((chart,idx) => {\r\n        let vaultId = Object.keys(props.charts)[idx];\r\n        props.gainsData.forEach( g => {\r\n          if(g.priceId == vaultId) vaultGain = g;\r\n        })\r\n        return (<>\r\n          <Chart gainsData={vaultGain} \r\n              chart={chart} \r\n              idx={idx} \r\n              vaultId={vaultId} \r\n              key={vaultId} />\r\n          </>\r\n        )\r\n      })\r\n    }\r\n    return (<>\r\n        {rows}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default earningChartList;",{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","severity":1,"message":"37","line":1,"column":38,"nodeType":"38","messageId":"39","endLine":1,"endColumn":49},{"ruleId":"36","severity":1,"message":"40","line":5,"column":10,"nodeType":"38","messageId":"39","endLine":5,"endColumn":14},{"ruleId":"36","severity":1,"message":"40","line":2,"column":10,"nodeType":"38","messageId":"39","endLine":2,"endColumn":14},{"ruleId":"36","severity":1,"message":"41","line":2,"column":16,"nodeType":"38","messageId":"39","endLine":2,"endColumn":19},{"ruleId":"42","severity":1,"message":"43","line":16,"column":24,"nodeType":"44","messageId":"45","endLine":16,"endColumn":26},"no-native-reassign",["46"],"no-negated-in-lhs",["47"],"no-unused-vars","'useCallback' is defined but never used.","Identifier","unusedVar","'Line' is defined but never used.","'Pie' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]